<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.springbootjpaangular16s</groupId>
	<artifactId>spring-boot-jpa-angular16s</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-jpa-angular16s</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
<!--		<java.version>17.0.7</java.version>-->
	</properties>

	<dependencies>
<!--	<dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-boot-starter</artifactId>
    <version>3.0.0</version>
    </dependency> -->
    
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
      </dependency>
      
      
      
  <!--  <dependency>
    <groupId>io.springfox</groupId>
    <artifactId>springfox-swagger-ui</artifactId>
    <version>2.9.2</version>
</dependency>-->
  	<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.5.0</version>
		</dependency> 
	<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->

	<!-- API 
<dependency>
    <groupId>jakarta.xml.ws</groupId>
    <artifactId>jakarta.xml.ws-api</artifactId>
    <version>2.3.3</version>
</dependency>


-->
<dependency>
    <groupId>com.querydsl</groupId>
    <artifactId>querydsl-core</artifactId>
    <version>5.0.0</version><!-- $NO-MVN-MAN-VER$ -->
</dependency>
<dependency>
    <groupId>com.querydsl</groupId>
    <artifactId>querydsl-jpa</artifactId>
    <version>5.0.0</version><!-- $NO-MVN-MAN-VER$ -->
</dependency>
<dependency>
  <groupId>com.querydsl</groupId>
  <artifactId>querydsl-apt</artifactId>
  <version>5.0.0</version><!-- $NO-MVN-MAN-VER$ --> 
<!--  <classifier>jakarta</classifier>-->
</dependency>
<!-- Runtime -->
	<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		
<dependency>
    <groupId>com.sun.xml.ws</groupId>
    <artifactId>jaxws-rt</artifactId>
    <version>2.3.3</version>
</dependency>
	 <dependency>
        <groupId>io.reactivex.rxjava2</groupId>
        <artifactId>rxjava</artifactId>
      </dependency>
	   <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
      </dependency>
		<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20200518</version>
	    </dependency>
		<dependency>
	    <groupId>org.jsondoc</groupId>
	    <artifactId>jsondoc-core</artifactId>
	    <version>1.2.22</version>
	 </dependency>
	     <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
        </dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <version>2.3.1.RELEASE</version><!-- $NO-MVN-MAN-VER$ -->
		    <scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
			<!--WebJars added changed-->
		<dependency>  <!-- not use spring-boot-starter-logging, we need to check others which depends on spring-boot-starter-logging, and change it too -->
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-logging</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-slf4j-impl</artifactId>
		  <scope>compile</scope>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-api</artifactId>
		  <scope>compile</scope>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-core</artifactId>
		  <scope>compile</scope>
		</dependency>
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>jul-to-slf4j</artifactId>
		  <scope>compile</scope>
		</dependency>		
		
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>2.1.4</version>
		</dependency>
		
		<!--  this will as login automatically
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		 -->
		 <!--  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		-->
		<!-- end changed  -->
		<dependency>
    <groupId>org.eclipse.persistence</groupId>
    <artifactId>eclipselink</artifactId>
    <version>2.5.0</version>
    </dependency>
    
    <dependency>
    <groupId>com.github.h-thurow</groupId>
    <artifactId>simple-jndi</artifactId>
    <version>0.23.0</version>
</dependency>

		<dependency>
	<groupId>javax.persistence</groupId>
	<artifactId>javax.persistence-api</artifactId>
    </dependency>
	    <dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency> 
      <!--  postgresql -->
      <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.5.1</version><!--$NO-MVN-MAN-VER$-->
        </dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <scope>test</scope>
		</dependency>
 <!--  angular deploy-->
	

		
		
			<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.28</version><!--$NO-MVN-MAN-VER$-->
			<optional>true</optional>
		</dependency>
	
	</dependencies>
	<!--  end angular deploy -->						 
	

	<build>
		<plugins>
		<!--
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <configuration>
		        <release>1.8</release> 
		         <compilerArgs>enable-preview</compilerArgs>
		    </configuration> 
		</plugin>-->
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>			  		 
			<plugin>
			  <groupId>com.github.eirslett</groupId>
			  <artifactId>frontend-maven-plugin</artifactId>
			  <version>1.13.4</version>
			  <configuration>
        		<installDirectory>root</installDirectory>
        		<workingDirectory>src/main/angular16forspringbootjpa</workingDirectory>
    		  </configuration>
			  <executions>
			      <execution>
			          <id>install node and npm</id>
			          <goals>
			              <goal>install-node-and-npm</goal>
			          </goals>
			          <configuration>
			              <nodeVersion>v18.16.1</nodeVersion>
			              <npmVersion>9.5.1</npmVersion>
			          </configuration>
			      </execution>
			      <execution>
			          <id>npm install</id>
			          <goals>
			              <goal>npm</goal>
			          </goals>
			      </execution>
			      <execution>
			          <id>prod build</id>
			          <goals>
			              <goal>npm</goal>
			          </goals>
			          <phase>generate-resources</phase>
			          <configuration>
			              <arguments>run build-prod</arguments>
			              <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
			          </configuration>
			      </execution>
			  </executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version><!--$NO-MVN-MAN-VER$-->  <!-- 1.6.0 -->
				<executions>
					<execution>
						<id>gulp install</id>
						<phase>initialize</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm.cmd</executable>
							<arguments>
								<argument>install</argument>
								<argument>gulp</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>del install</id>
						<phase>initialize</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm.cmd</executable>
							<arguments>
								<argument>install</argument>
								<argument>del</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>log install</id>
						<phase>initialize</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>npm.cmd</executable>
							<arguments>
								<argument>install</argument>
								<argument>fancy-log</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>gulp build</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>gulp.cmd</executable>
						</configuration>
					</execution>
				</executions>
			</plugin>
			  <plugin>
      <!-- Build an executable JAR -->
      <artifactId>maven-jar-plugin</artifactId>
      <configuration>
        <archive>
          <manifest>
            <addClasspath>true</addClasspath>
<!--            <classpathPrefix>lib/</classpathPrefix>-->
            <mainClass>com.springbootjpaangular2.SpringBootWebApplication</mainClass>
          </manifest>
        </archive>
      </configuration>
    </plugin>
			<plugin>
		      <groupId>org.springframework.boot</groupId>
		      <artifactId>spring-boot-maven-plugin</artifactId>
		      <executions>
		            <execution>
		                <goals>
		                    <goal>repackage</goal>
		                </goals>
		                <configuration>
		                    <mainClass>com.bbtutorials.users.UsersApplication</mainClass>
		                    <outputDirectory>${project.basedir}/docker</outputDirectory>
		                </configuration>
		            </execution>
		        </executions>
		    </plugin>			
		</plugins>
				<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[3.0.0,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- <ignore></ignore> -->
										<execute/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>			
	</build>


</project>
